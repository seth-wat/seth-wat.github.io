{"version":3,"sources":["ContactForm/index.js","Intro/index.js","Outro/index.js","Social/index.js","App.js","index.js"],"names":["ContactForm","props","_useContactFormError","useContactFormError","nameError","emailError","messageError","validator","clearError","_useContactFormValues","useContactFormValues","nameValue","emailValue","messageValue","setNameValue","setEmailValue","setMessageValue","_useState","useState","_useState2","Object","slicedToArray","isLoading","setLoading","react_default","a","createElement","className","onSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","preventDefault","fetch","process","method","body","JSON","stringify","name","email","content","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","t0","error","stop","_x","apply","this","arguments","type","length","placeholder","value","onChange","target","onBlur","iconContext","Provider","color","size","fa","_useState3","_useState4","setNameError","_useState5","_useState6","setEmailError","_useState7","_useState8","setMessageError","_typeMap$type","set","msg","message","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","Intro","Typist_default","onTypingDone","setTimeout","setTypingStatus","Delay","ms","Outro","isTyping","go","onClick","document","querySelector","scrollIntoView","behavior","Social","window","open","App","Fragment","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","Intro_Intro","Outro_Outro","ContactForm_ContactForm","Social_Social","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.24600df4.chunk.js","sourcesContent":["import {FaSpinner} from \"react-icons/fa\";\nimport React, {useState} from \"react\";\nimport {IconContext} from \"react-icons/lib\";\nimport {toast} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nexport const ContactForm = (props) => {\n\n    const {nameError, emailError, messageError, validator, clearError} = useContactFormError()\n    const {nameValue, emailValue, messageValue, setNameValue, setEmailValue, setMessageValue} = useContactFormValues()\n    const [isLoading, setLoading] = useState(false)\n    return (\n        <form className='contact-form' onSubmit={async (e) => {\n            e.preventDefault()\n            validator(nameValue, 'name')\n            validator(nameValue, 'email')\n            validator(nameValue, 'message')\n            if(nameValue && emailValue && messageValue) {\n                setLoading(true)\n                try {\n                    await fetch(process.env.REACT_APP_EMAIL_ENDPOINT, {\n                        method: 'post',\n                        body: JSON.stringify({name: nameValue, email: emailValue, content: messageValue})\n                    })\n                    setLoading(false)\n                    toast('Thank you, I\\'ll be in touch!', {\n                        className: \"toast\",\n                        position: \"top-left\",\n                        autoClose: 5000,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                    });\n                } catch(e) {\n                    setLoading(false)\n                    toast.error('The request failed, please re-submit.', {\n                        className: \"toast\",\n                        position: \"top-left\",\n                        autoClose: 5000,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                    });\n                }\n\n            }\n        }}>\n            <div className='form-element'>\n                <label>Name:</label>\n                <input type='text' className={nameError.length ? 'input-error' : ''} placeholder='name'\n                       value={nameValue} onChange={(e) => {\n                    setNameValue(e.target.value)\n                    nameError && clearError('name')\n                }} onBlur={() => {\n                    validator(nameValue, 'name')\n                }}/>\n                {nameError &&\n                <label className='error-label'>{nameError}</label>}\n            </div>\n            <div className='form-element'>\n                <label>Email:</label>\n                <input type='text' className={emailError.length ? 'input-error' : ''} placeholder='email'\n                       value={emailValue} onChange={(e) => {\n                    setEmailValue(e.target.value)\n                    emailError && clearError('email')\n                }} onBlur={() => {\n                    validator(emailValue, 'email')\n                }}/>\n                {emailError && <label className='error-label'>{emailError}</label>}\n            </div>\n            <div className='form-element'>\n                <label>Message:</label>\n                <textarea className={messageError.length ? 'input-error' : ''} value={messageValue} onChange={(e) => {\n                    setMessageValue(e.target.value)\n                    messageError && clearError('message')\n                }} onBlur={() => {\n                    validator(messageValue, 'message')\n                }}/>\n                {messageError && <label className='error-label'>{messageError}</label>}\n            </div>\n            <div className='submit-container'>\n                {isLoading && <IconContext.Provider value={{color: '#ffeb7f', className: 'spinner', size: '1.25rem'}}>\n                    <FaSpinner/>\n                </IconContext.Provider>\n                }\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nexport const useContactFormError = () => {\n\n    const [nameError, setNameError] = useState('')\n    const [emailError, setEmailError] = useState('')\n    const [messageError, setMessageError] = useState('')\n\n    const validator = (value, type) => {\n        const typeMap = {\n            name: {set: setNameError, msg: 'How should I address you?'},\n            email: {set: setEmailError, msg: 'I\\'ll need a return address!'},\n            message: {set: setMessageError, msg: 'Don\\'t forget your message!'}\n        }\n\n        const {set, msg} = typeMap[type]\n        value.length ? set('') : set(msg)\n    }\n\n    const clearError = (type) => {\n        const typeMap = {\n            name: setNameError,\n            email: setEmailError,\n            message: setMessageError\n        }\n\n        typeMap[type]('')\n\n    }\n\n    return {nameError, emailError, messageError, validator, clearError}\n}\n\nexport const useContactFormValues = () => {\n    const [nameValue, setNameValue] = useState('')\n    const [emailValue, setEmailValue] = useState('')\n    const [messageValue, setMessageValue] = useState('')\n    return {nameValue, emailValue, messageValue, setNameValue, setEmailValue, setMessageValue}\n}","import Typist from 'react-typist'\nimport React from 'react'\n\nexport const Intro = (props) => {\n    return(\n        <Typist onTypingDone={() => {\n            setTimeout(() => {\n                props.setTypingStatus(false)\n            }, 200)\n        }}>\n            <p className='intro-paragraph'>\n                Being a developer is about more than being a coder. <Typist.Delay ms={500}/> It’s about\n                being a\n                unique problem solver, <Typist.Delay ms={500}/> an excellent communicator, <Typist.Delay\n                ms={500}/>and a translator between the complexities of software engineering and the user\n                experience.\n                <br/>\n                <br/>\n                <Typist.Delay ms={500}/>\n                Blending these traits into highly stable, <Typist.Delay\n                ms={500}/>deployable, <Typist.Delay ms={500}/>and maintainable software is what it\n                takes,<Typist.Delay ms={500}/> and what I enjoy.\n            </p>\n        </Typist>\n    )\n}","import {GoArrowDown} from \"react-icons/go\";\nimport {IconContext} from \"react-icons/lib\";\n\nimport React from \"react\";\n\nexport const Outro = (props) => {\n    return(\n        <div className='icon-box'>\n            <IconContext.Provider value={{\n                color: \"white\", size: \"3em\", className: props.isTyping ? 'gone' : 'arrow-down'\n            }}>\n                <GoArrowDown onClick={() => {\n                    const work = document.querySelector('.contact-section')\n                    work.scrollIntoView({behavior: 'smooth'})\n                }}/>\n            </IconContext.Provider>\n        </div>\n    )\n}","import {FaGithub} from \"react-icons/fa\";\nimport {IconContext} from \"react-icons/lib\";\nimport React from 'react'\n\nexport const Social = () => {\n    return(\n        <div className='icon-box'>\n            <IconContext.Provider value={{\n                color: \"#ECEFF1\", size: \"2.5em\", className: 'github-icon'\n            }}>\n                <FaGithub onClick={() => {\n                    window.open('https://www.github.com/seth-wat', '_blank');\n                }}/>\n            </IconContext.Provider>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {ContactForm} from \"./ContactForm\";\nimport {ToastContainer} from \"react-toastify\";\nimport {Intro} from \"./Intro\";\nimport {Outro} from \"./Outro\";\nimport {Social} from \"./Social\";\n\nexport const App = () => {\n\n    const [isTyping, setTypingStatus] = useState(true)\n\n    return (\n        <React.Fragment>\n            <ToastContainer\n                position=\"top-left\"\n                autoClose={5000}\n                hideProgressBar\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnVisibilityChange\n                draggable\n                pauseOnHover\n            />\n            <div className=\"intro-section\">\n                <div className='title-div'>\n                    <h1 className='main-title'>Seth R. Watkins</h1>\n                    <h3 className='main-sub-title'>Frontend Developer</h3>\n                </div>\n                <div className='intro-paragraph-container'>\n                    <Intro setTypingStatus={setTypingStatus}/>\n                </div>\n                <div className='arrow-down-container'>\n                    <Outro isTyping={isTyping}/>\n                </div>\n            </div>\n            <div className='contact-section'>\n                <div className='contact-section-header'>\n                    <h1>Lets start a conversation</h1>\n                </div>\n                <div className='form-container'>\n                    <ContactForm/>\n                </div>\n                <div className='social'>\n                    <Social/>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}